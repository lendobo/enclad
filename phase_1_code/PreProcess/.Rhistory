#knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE, fig.show = 'hide', results="hide")
counts = read.csv('counts.csv')
#knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE, fig.show = 'hide', results="hide")
counts = read.csv('counts.csv')
counts = read.csv('counts.csv')
head(counts)
totalcounts = colSums(counts)
totalcounts
ratespermillion = as.data.frame(sweep(10^6*counts,2,totalcounts,FUN="/"))
head(ratespermillion)
ct.names = paste('ct',1:4,sep = '.')
kd.names = paste('kd',1:3,sep = '.')
# The apply() function applies a function (the third argument to apply,
# here mean or sd) to a data frame (the first argument) by row (when the
# second argument = 1) or column (when the second argument = 2).
control.mean = apply(ratespermillion[ct.names],1,mean)
control.sd =  apply(ratespermillion[ct.names],1,sd)
knockdown.mean = apply(ratespermillion[kd.names],1,mean)
knockdown.sd =  apply(ratespermillion[kd.names],1,sd)
# Plot results for control samples in blue
plot(control.mean,control.sd,log = 'xy',pch = 20,cex=.5,col='blue',xlab = 'Mean Rate',ylab = 'Stand dev')
# and the knockdown samples in red
points(knockdown.mean,knockdown.sd,pch=20,cex=0.5,col='red')
title('Standard deviation vs mean rate')
all.fit = lm(sd~mean, data.frame(mean=log(c(control.mean,knockdown.mean)),sd=log(c(control.sd,knockdown.sd))))
coef(all.fit)
t.test(ratespermillion['FBgn0000043',ct.names],ratespermillion['FBgn0000043',kd.names],var.equal=FALSE)
# calculate p-values of all genes using unequal variance
pvalues.orig = apply(ratespermillion, 1, function(row)
{t.test(x=row[ct.names], y=row[kd.names], var.equal=FALSE)$p.value})
## transform the ratespermillion data using the fitted coefficient
transformed = as.data.frame(ratespermillion^(1-coef(all.fit)['mean']))
head(transformed)
#mean and sd for transformed values
control.t.mean = apply(transformed[ct.names],1,mean)
control.t.sd = apply(transformed[ct.names],1,sd)
knockdown.t.mean = apply(transformed[kd.names],1,mean)
knockdown.t.sd = apply(transformed[kd.names],1,sd)
# Plot sd vs mean of transformed data
plot(x=control.t.mean, y=control.t.sd, pch=20, cex=0.5, col='blue', ylim = c(-0.03,0.3),
xlab='Mean transformed value', ylab='Sd of transformed value')
points(x=knockdown.t.mean, y=knockdown.t.sd, pch=20, cex=0.5, col='red')
title('SD versus mean rate of transformed data')
#ttest on transformed data
t.test(x=transformed['FBgn0000043', ct.names],
y=transformed['FBgn0000043', kd.names], var.equal=TRUE)
# T-test on all rows, and extracting the p-values from the test result
pvalues.t <- apply(transformed, 1, function(row)
{t.test(x=row[ct.names], y=row[kd.names], var.equal=TRUE)$p.value})
# Add the p-values to the ratespermillion table:
ratespermillion$pvalue.t <- pvalues.t
head(ratespermillion)
# compare the p-values before and after transformation
plot(x=-log10(pvalues.orig),y=-log10(pvalues.t),xlim=c(0,8),ylim=c(0,8),xlab="-log10(p-values) before transformation",ylab="-log10(p-values) after transformation")
abline(coef=c(0,1),col='blue')
legend(0.2,7.5,legend=c('x=y'),col=c('blue'),lty=1,box.lty=0)
title('p values before and after transformation')
counts = read.csv('/home/celeroid/Documents/CLS_MSc/Thesis/EcoCancer/ENCLAD/phase_1_code/data/Synapse/TCGA/Proteomics_CMS_groups/TCGACRC_proteomics_ALL_labelled.csv')
head(counts)
totalcounts = colSums(counts)
rownames(counts) <- counts[, 1]
counts = read.csv('/home/celeroid/Documents/CLS_MSc/Thesis/EcoCancer/ENCLAD/phase_1_code/data/Synapse/TCGA/Proteomics_CMS_groups/TCGACRC_proteomics_ALL_labelled.csv')
counts <- counts[-2, ]
rownames(counts) <- counts[, 1]
head(counts)
counts = read.csv('/home/celeroid/Documents/CLS_MSc/Thesis/EcoCancer/ENCLAD/phase_1_code/data/Synapse/TCGA/Proteomics_CMS_groups/TCGACRC_proteomics_ALL_labelled.csv')
counts <- counts[-2, ]
rownames(counts) <- counts[, 1]
head(counts)
counts = read.csv('/home/celeroid/Documents/CLS_MSc/Thesis/EcoCancer/ENCLAD/phase_1_code/data/Synapse/TCGA/Proteomics_CMS_groups/TCGACRC_proteomics_ALL_labelled.csv')
counts <- counts[-2, ]
counts <- counts[, -1]
rownames(counts) <- counts[, 1]
counts = read.csv('/home/celeroid/Documents/CLS_MSc/Thesis/EcoCancer/ENCLAD/phase_1_code/data/Synapse/TCGA/Proteomics_CMS_groups/TCGACRC_proteomics_ALL_labelled.csv')
counts <- counts[-2, ]
counts <- counts[, -1]
# rownames(counts) <- counts[, 1]
head(counts)
counts = read.csv('/home/celeroid/Documents/CLS_MSc/Thesis/EcoCancer/ENCLAD/phase_1_code/data/Synapse/TCGA/Proteomics_CMS_groups/TCGACRC_proteomics_ALL_labelled.csv')
rownames(counts) <- counts[, 1]
counts <- counts[-1, ]
counts <- counts[, -1]
head(counts)
totalcounts = colSums(counts)
totalcounts = colSums(counts)
counts = read.csv('/home/celeroid/Documents/CLS_MSc/Thesis/EcoCancer/ENCLAD/phase_1_code/data/Synapse/TCGA/Proteomics_CMS_groups/TCGACRC_proteomics_ALL_labelled.csv')
rownames(counts) <- counts[, 1]
counts <- counts[-1, ]
counts <- counts[, -1]
head(counts)
